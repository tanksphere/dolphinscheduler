<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.apache.dolphinscheduler.dao.mapper.RoleComponentsMapper">
  
  <resultMap id="BaseResultMap" type="org.apache.dolphinscheduler.dao.entity.RoleComponents">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="tenant_id" jdbcType="INTEGER" property="tenantId" />
    <result column="role_id" jdbcType="BIGINT" property="roleId" />
    <result column="menu_id" jdbcType="BIGINT" property="menuId" />
    <result column="type" jdbcType="VARCHAR" property="type" />
    <result column="enabled" jdbcType="CHAR" property="enabled" />
    <result column="create_user" jdbcType="VARCHAR" property="createUser" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_user" jdbcType="VARCHAR" property="updateUser" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  
  <sql id="Base_Column_List">
    id, tenant_id, role_id, menu_id, `type`, enabled, create_user, create_time, update_user, 
    update_time
  </sql>
  
  <select id="selectById" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_ds_role_components
    where id = #{id,jdbcType=BIGINT}
  </select>
  
  <delete id="deleteById" parameterType="java.lang.Long">
    delete from t_ds_role_components
    where id = #{id,jdbcType=BIGINT}
  </delete>
  
  <insert id="insert" parameterType="org.apache.dolphinscheduler.dao.entity.RoleComponents">
    insert into t_ds_role_components (id, tenant_id, role_id, 
      menu_id, `type`, enabled, 
      create_user, update_user)
    values (#{id,jdbcType=BIGINT}, #{tenantId,jdbcType=INTEGER}, #{roleId,jdbcType=BIGINT}, 
      #{menuId,jdbcType=BIGINT}, #{type,jdbcType=VARCHAR}, #{enabled,jdbcType=CHAR}, 
      #{createUser,jdbcType=VARCHAR}, #{updateUser,jdbcType=VARCHAR})
  </insert>
  
  <insert id="insertSelective" parameterType="org.apache.dolphinscheduler.dao.entity.RoleComponents">
    insert into t_ds_role_components
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="tenantId != null">
        tenant_id,
      </if>
      <if test="roleId != null">
        role_id,
      </if>
      <if test="menuId != null">
        menu_id,
      </if>
      <if test="type != null">
        `type`,
      </if>
      <if test="enabled != null">
        enabled,
      </if>
      <if test="createUser != null">
        create_user,
      </if>
      <if test="updateUser != null">
        update_user,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="tenantId != null">
        #{tenantId,jdbcType=INTEGER},
      </if>
      <if test="roleId != null">
        #{roleId,jdbcType=BIGINT},
      </if>
      <if test="menuId != null">
        #{menuId,jdbcType=BIGINT},
      </if>
      <if test="type != null">
        #{type,jdbcType=VARCHAR},
      </if>
      <if test="enabled != null">
        #{enabled,jdbcType=CHAR},
      </if>
      <if test="createUser != null">
        #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="updateUser != null">
        #{updateUser,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  
  <update id="updateByIdSelective" parameterType="org.apache.dolphinscheduler.dao.entity.RoleComponents">
    update t_ds_role_components
    <set>
      <if test="tenantId != null">
        tenant_id = #{tenantId,jdbcType=INTEGER},
      </if>
      <if test="roleId != null">
        role_id = #{roleId,jdbcType=BIGINT},
      </if>
      <if test="menuId != null">
        menu_id = #{menuId,jdbcType=BIGINT},
      </if>
      <if test="type != null">
        `type` = #{type,jdbcType=VARCHAR},
      </if>
      <if test="enabled != null">
        enabled = #{enabled,jdbcType=CHAR},
      </if>
      <if test="createUser != null">
        create_user = #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="updateUser != null">
        update_user = #{updateUser,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  
  <update id="updateById" parameterType="org.apache.dolphinscheduler.dao.entity.RoleComponents">
    update t_ds_role_components
    set tenant_id = #{tenantId,jdbcType=INTEGER},
      role_id = #{roleId,jdbcType=BIGINT},
      menu_id = #{menuId,jdbcType=BIGINT},
      `type` = #{type,jdbcType=VARCHAR},
      enabled = #{enabled,jdbcType=CHAR},
      create_user = #{createUser,jdbcType=VARCHAR},
      update_user = #{updateUser,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  
  <sql id="Dynamic_Where_Clause">
    <where>
      <if test="ew.id != null and ew.id != ''">
        AND id = #{ew.id,jdbcType=BIGINT}
      </if>
      <if test="ew.tenantId != null and ew.tenantId != ''">
        AND tenant_id = #{ew.tenantId,jdbcType=INTEGER}
      </if>
      <if test="ew.roleId != null and ew.roleId != ''">
        AND role_id = #{ew.roleId,jdbcType=BIGINT}
      </if>
      <if test="ew.menuId != null and ew.menuId != ''">
        AND menu_id = #{ew.menuId,jdbcType=BIGINT}
      </if>
      <if test="ew.type != null and ew.type != ''">
        AND `type` = #{ew.type,jdbcType=VARCHAR}
      </if>
      <if test="ew.enabled != null and ew.enabled != ''">
        AND enabled = #{ew.enabled,jdbcType=CHAR}
      </if>
      <if test="ew.createUser != null and ew.createUser != ''">
        AND create_user = #{ew.createUser,jdbcType=VARCHAR}
      </if>
      <if test="ew.createTime != null and ew.createTime != ''">
        AND create_time = #{ew.createTime,jdbcType=TIMESTAMP}
      </if>
      <if test="ew.updateUser != null and ew.updateUser != ''">
        AND update_user = #{ew.updateUser,jdbcType=VARCHAR}
      </if>
      <if test="ew.updateTime != null and ew.updateTime != ''">
        AND update_time = #{ew.updateTime,jdbcType=TIMESTAMP}
      </if>
    </where>
  </sql>
  
  <select id="selectCount" resultType="java.lang.Integer">
    SELECT COUNT(1) FROM t_ds_role_components
    <include refid="Dynamic_Where_Clause" />
  </select>
  
  <select id="selectList" resultMap="BaseResultMap">
    SELECT 
    <include refid="Base_Column_List" />
    FROM t_ds_role_components
    <include refid="Dynamic_Where_Clause" />
<!--    <if test="paging !=null and paging.offset >= 0 and paging.pageSize > 0">-->
<!--       limit ${paging.offset}, ${paging.pageSize} -->
<!--    </if>-->
  </select>
</mapper>